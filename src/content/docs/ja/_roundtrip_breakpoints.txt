### Background

Different layouts are required for small screens and large monitors. For the purposes of `srcset` and `sizes`, it is necessary to know the points at which the layout changes.

Web developers must decide what to shrink, hide, or move on small screens, or what to expand, reveal, or add on large screens. And the available information is very limited. Is the user on a tablet, a smartphone in landscape mode, or a small browser window?

We have to choose an arbitrary viewport width where the layout changes. This is called a **breakpoint**. It is any number of CSS pixels ([not device pixels](/ja/pixels-not-pixels)). Polypane has an [excellent article](https://polypane.app/blog/the-breakpoints-we-tested-in-2021-and-the-ones-to-test-in-2022/#the-breakpoints-to-develop-on-in-2023) on commonly used breakpoints.

Some images (such as logos, icons, and buttons) may be exempt from layout shifts caused by these breakpoints (and might be fine using [density descriptors for srcset](/ja/density-descriptors)).

Images of main content are constrained by the size of their container. Typically, the main content area of a page is limited by a specific width, `max-width`, on larger screens, while on small screens, the main content area fills the entire viewport.

When there are multiple columns at some breakpoints, the percentage of the viewport width that images occupy changes, making it difficult to calculate effective size rules.

### A Simple Method

That being said, try not to overthink this. The following approximation is likely enough:

1. What is the size at which the main column (or the image container) stops growing? Up to that viewport width, you can specify that the image occupies 100% of the viewport width in the image's `sizes` attribute by using `100vw`.  
2. What is the maximum width that container achieves? Set that as the fixed `width` for everything else.

If the answer to question 1 is 700px and the answer to question 2 is 800px, you can use the following `sizes` attribute:

```html
<!-- These are CSS pixels, not device pixels or image pixels. -->
<img [...] sizes="(max-width: 700px) 100vw, 800px" />
```

> You might think that browsers can handle these calculations well based on CSS. Unfortunately, browsers are eager to choose image URLs before stylesheets are downloaded, so you have to do the calculations yourself. And, if it's not perfect, so be it.

---

Mistakes or Clumsy Phrasing:

1. {{Note that the term "main column" might suggest a single column, but contextually it's referring to the main content area, which might confuse readers if not familiar with web design terminologies.}}
2. {{The phrase "calculation to handle yourself" might be clearer as "perform the calculation yourself".}}
3. {{The concept of breakpoints, srcset, and sizes are technically described, assuming the reader has some foundational knowledge of web development, which could be challenging for beginners.}}
=====================

Content prompt used: 
Translate the following to Japanese, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'ja' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Breakpoints & images
 2. Why some (but not all) breakpoints matter for your images

Metadata returned1. ブレークポイントと画像
2. なぜ画像に関係するブレークポイントがあるのか（すべてではないが） 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
