---
title: '`srcset` and `sizes` for `<img>`'
description: An Efficient and Subjective Guide to Responsive Images in 2023
taskInputHash: fb587f981b4441f1
lang: en
ignore: '/* cSpell:locale ja,en*/'
sidebar_sort_priority: 1000
date_published: '2023-03-23'
date_modified: '2023-03-31'
date_updated: '2023-03-31'
---
**An Efficient and Subjective Guide to Responsive Images in 2023**

For a deeper dive, consult the sidebar. This is a quick reference to upgrade your `<img>` game, covering how to handle various image sizes and pixel densities in the modern age. You need to know that pixels != pixels [{{Note that the term used here is not the technical term}}](/en/pixels-not-pixels), and that `devicePixelRatio` is more like 3.875 than 1:1. Modern smartphones have many device pixels per CSS pixel, and they are often declared to have a viewport width in CSS pixels that's different from their physical width in device pixels.

> If an image has to be the same size irrespective of the browser window, [a density descriptor](/en/density-descriptors) should be used. This is suitable for logos, icons, buttons, etc.

Do you know your [breakpoints](/en/breakpoints)? You'll need these numbers to fine-tune the following solutions— at a minimum, you need the breakpoint at which the main content area stops expanding and the viewport width. 

### The Easy Solution

```html
<img src="img.jpg?w=480" 
        srcset="img.jpg?format=webp&w=480 480w, 
                img.jpg?format=webp&w=800 800w, 
                img.jpg?format=webp&w=1200 1200w, 
                img.jpg?format=webp&w=1600 1600w, 
                img.jpg?format=webp&w=2000 2000w"
                
        sizes="(max-width: 700px) 100vw, 800px" alt="A dog riding a bike." />
      
<!-- Assumes a breakpoint of 700px. 
      This image takes up 100% of the width below that breakpoint, 
      but is limited to 800 CSS pixels otherwise. -->

<!-- Assumes that you’re using an RIAPI-compliant image server like Imageflow. 
     Generating dynamic versions of images is mandatory for developer sanity. -->
```

{{The translation is complete and accurate.}}
=====================

Content prompt used: 
Translate the following to Japanese, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'ja' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. srcset & <img> sizes 
 2. An Efficient and Opinionated Guide to Responsive Images for 2023

Metadata returned1. `srcset` と `<img>` の `sizes`
2. 2023年のレスポンシブイメージの効率的で主観的なガイド 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
