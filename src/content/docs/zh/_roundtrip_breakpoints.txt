---
title: Breakpoints and Images
description: Why your images might be affected by some (but not all) breakpoints
taskInputHash: ce7f991fbad25211
lang: en
---
### Background

Small screens and large screens require different layouts. To use `srcset` and `sizes`, we need to know when the layout changes.

Web developers must decide what to shrink, hide, or reposition on smaller screens—or, more commonly, what to expand, reveal, or add on larger ones. And they have almost no information. Is the user on a tablet or a horizontally-oriented phone—or in a tiny browser window?

We must choose an arbitrary viewport width for a layout change. This is called a **breakpoint**. It is a non-device-pixel CSS pixel number ([not be confused with device pixels](/pixels-not-pixels)). Polypane has a [great article](https://polypane.app/blog/the-breakpoints-we-tested-in-2021-and-the-ones-to-test-in-2022/#the-breakpoints-to-develop-on-in-2023) covering common breakpoints.

Some images (like logos, icons, or buttons) might be immune to layout changes caused by these breakpoints (and can be handled with [srcset density descriptors](/density-descriptors)).

Content images will be limited by their container size. Typically, the main content area of a page is constrained to a specific width, `max-width`, on the largest screens, but fills the entire viewport on small ones.

If there are multiple columns at some breakpoints, calculating effective size rules will become more difficult because the percentage of viewport width that an image occupies will change.

### A simple approach

That said, don’t overthink things. You might be very happy with these rough approximations:

1. On what size does the primary column (or the image’s container) stop growing? At that viewport width, we can use `100vw` in the image’s `sizes` attribute to mean the image occupies the entire viewport.  
2. What’s the maximum width the container can reach? We can set it to a fixed `width` for all other content.

If your answers were 700 pixels for 1, and 800 pixels for 2, you could use the following `sizes` attribute:

```html
<!-- These are CSS pixels, not device pixels or image pixels. -->
<img [...] sizes="(max-width: 700px) 100vw, 800px" />
```

> You might think that browsers handle all these calculations elegantly based on CSS. Unfortunately, browsers are quick to select an image URL before the stylesheets are downloaded. So, we must do the math ourselves, and it’s okay if we can’t do it perfectly.

=====================

Content prompt used: 
Translate the following to Simplified Chinese, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'zh' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Breakpoints & images
 2. Why some (but not all) breakpoints matter for your images

Metadata returned1. 断点和图像
2. 为什么您的图像会受到某些（但不是所有）断点的影响 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
