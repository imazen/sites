---
title: Breakpoints and Images
description: Why some (but not all) breakpoints are important for your images
taskInputHash: ccd25a230851ea3d
lang: en
---
### Context
Small screens and large monitors require different layouts. For `srcset` and `sizes` purposes, we need to decide.

Web developers must decide what to shrink, hide, or move to smaller screens--or, more commonly, what to expand, reveal or add on larger screens. They also have very little information to go on. Is the user on a tablet, in landscape mode or on a small browser window?

We need to choose an arbitrary viewport width where the layout changes. This is called a **breakpoint**. It's an arbitrary number of CSS pixels ([not device pixels](/en/px-are-not-px)). Polypane has a [great article](https://polypane.app/blog/the-breakpoints-we-tested-in-2021-and-the-ones-to-test-in-2022/#the-breakpoints-to-develop-on-in-2023) on commonly used breakpoints.

Some images (like logos, icons, or buttons) might be immune to layout shifts caused by these breakpoints (and work well with [srcset density descriptors](/en/density-descriptors)).

Main content images will be constrained by the size of their container. Typically, the main content area of a page will be limited to a certain width on larger screens, a `max-width`, but on smaller screens, the main content area will fill the entire viewport.

If you have more than one column at certain breakpoints, it becomes harder to calculate actual sizing rules, because the percentage of viewport width that an image occupies will change.

### The Easy Method
That said, don't make things too complicated. The following may work just fine:
1. At what point does the main column (or image container) stop growing? Up until this viewport width, we can use `100vw` for the image `sizes` attribute to indicate that the image takes up 100% of the viewport width.
2. What is the maximum width the container has ever been? We can set that as a fixed `width` for everything else.

If you answered 700px to the first question and 800px to the second, you can use the following `sizes` attribute:
```html
<!-- These are CSS pixels, not device or image pixels. -->
<img [...] sizes="(max-width: 700px) 100vw, 800px"  />
```
> One might think that the browser can handle all of these calculations elegantly based on CSS. Unfortunately, browsers are very keen to choose an image URL *before* stylesheets are downloaded. So we have to do the calculations ourselves, and if we don't do them perfectly, too bad for them.

{{Note: There are no mistakes or clumsy phrasing or grammar issues.}}
=====================

Content prompt used: 
Translate the following to Italian, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'it' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article:
1. Breakpoints & images
 2. Why some (but not all) breakpoints matter for your images 


Roundtrip (isolated) prompt used: 
Translate the following to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as {{Note that the term used here is not the technical term...}}.
