---
title: Image Filling
description: How to fill images with CSS and aspect ratio and center them
taskInputHash: c0f932c493b16453
lang: en
---
Here's how to center and fill an image with padding using CSS and aspect ratio:

1. First, you need to wrap the image in a container element such as a `<div>` or `<figure>`. This will enable you to apply styles to the container that affect the image inside it.
2. Set the container's `position` property to `relative`. This will allow you to position the image inside the container.
3. Add a `::after` pseudo-element inside the container. This will be used to maintain the aspect ratio of the image and create the padding.
4. Set the `content` property of the `::after` pseudo-element to an empty string. This is necessary to create the element.
5. Set the `padding-bottom` property of the `::after` pseudo-element to a percentage value that corresponds to the aspect ratio of the image. For example, if your image has a 4:3 aspect ratio, you should set the padding to `75%` (because 3/4 = 0.75). This will create the padding below the image.
6. Set the `position` property of the `::after` pseudo-element to `absolute`. This will position the element inside the container.
7. Set the `top`, `left`, `bottom`, and `right` properties of the `::after` pseudo-element to `0`. This will cause the element to fill the container and create the padding.
8. Finally, set the `position` property of the image itself to `absolute`. This will allow you to center the image inside the container using the `top`, `left`, `bottom`, and `right` properties.

Here is an example of CSS code that centers and fills an image with a 4:3 aspect ratio:

```css
.container {
  position: relative;
  width: 100%;
}

.container::after {
  content: "";
  display: block;
  padding-bottom: 75%; /* 4:3 aspect ratio */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

img {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  max-width: 100%;
  max-height: 100%;
}
```

In this example, the `.container` element is the container for the image. Use the `::after` pseudo-element to create the padding and maintain the aspect ratio of the image. Set the `img` element to `position: absolute` so that you can center it inside the container using the `top`, `left`, `bottom`, and `right` properties.

By setting the `max-width` and `max-height` properties of the image to `100%`, the image will be scaled proportionally to fit the available space. This means that the padding created by the `::after` pseudo-element will always be proportional to the size of the image.
=====================

Content prompt used: 
Translate the following to Simplified Chinese, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'zh' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Pad an image
 2. How to pad an image using css and aspect ratio to center

Metadata returned1. 图像填充
2. 如何使用 CSS 和宽高比填充图像并使其居中 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
