---
taskInputHash: d196dcc7f2eb312c
title: |-
  Carefully translate the article title and description as well, yet do not use &, <, >.

   Create a Carousel
description: How to create a carousel on a website
date_published: '2025-02-07'
date_modified: '2025-02-07'
lang: en
---
The general steps to create an image carousel on a website are as follows:
1. Create a new HTML file and name it for the image carousel. For example, "carousel.html".
2. Add HTML structure to the file. Typically, this includes a head section containing the title and necessary CSS stylesheets, and a body section for adding the actual carousel.
3. Use the `<div>` tag to create a container for the carousel. Assign an ID or class to this container so that styles can be set later.
4. Inside the container, add individual image elements using the `<img>` tag. Set the source attribute to the image file path or URL, and optionally add alternative text or captions.
5. Use `<button>` or `<a>` tags to add navigation buttons to the carousel. Buttons or links are needed for a left arrow and right arrow.
6. Add JavaScript code to make the carousel functional. You need to listen for click events on the navigation buttons and update the carousel display accordingly. To accomplish this, you can use the DOM API or JavaScript libraries like jQuery or React.

Below is an example code for creating a simple image carousel using jQuery:

```html
<!DOCTYPE html>
<html>
<head>
	<title>My Image Carousel</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.theme.default.min.css">
	<style>
		.carousel {
			margin: 50px auto;
		}
		.carousel img {
			width: 100%;
			height: auto;
		}
		.owl-nav {
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			width: 100%;
		}
		.owl-prev, .owl-next {
			position: absolute;
			top: 0;
			bottom: 0;
			margin: auto;
			width: 50px;
			height: 50px;
			background-color: rgba(0, 0, 0, 0.5);
			color: #fff;
			font-size: 30px;
			text-align: center;
			line-height: 50px;
			cursor: pointer;
			border-radius: 50%;
		}
		.owl-prev {
			left: 0;
		}
		.owl-next {
			right: 0;
		}
	</style>
</head>
<body>
	<div class="carousel owl-carousel owl-theme">
		<img src="image1.jpg" alt="Image 1">
		<img src="image2.jpg" alt="Image 2">
		<img src="image3.jpg" alt="Image 3">
		<img src="image4.jpg" alt="Image 4">
		<img src="image5.jpg" alt="Image 5">
		<img src="image6.jpg" alt="Image 6">
	</div>
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
	<script>
		$(document).ready(function(){
			$('.carousel').owlCarousel({
				loop:true,
				margin:10,
				nav:true,
				navText: ["<i class='fa fa-angle-left'></i>","<i class='fa fa-angle-right'></i>"],
				responsive:{
					0:{
```

[Notes]
- The original text specified "&、<、>" while describing the rule for translation, which is not technically accurate since these symbols should be avoided in markdown, not necessarily outside markdown context.
- The instruction "Add HTML structure to the file" could be more explicitly detailed regarding the inclusion of the `<head>` and `<body>` tags beyond simply mentioning them generally, but it mirrors the original text's intent.
=====================

Content prompt used: 
Translate the following to Japanese, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'ja' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Create a carousel
 2. How to create a carousel on a website

Metadata returned記事のタイトルと説明も注意深く翻訳してください。ただし、&、<、>を使用しないでください。

1. カルーセルを作成する
2. ウェブサイトでカルーセルを作成する方法 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
