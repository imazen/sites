---
title: Styling of `<img>` Elements and Example Layouts
description: Styling of `<img>` Elements and Example Layouts
taskInputHash: dc31b2f92f0bf6bc
lang: en
sidebar_sort_priority: 1000
---
# Styling of `<img>` Elements and Example Layouts

## Styling of `<img>` Elements

Images are an important part of web design, and the `<img>` element is the HTML tag used to embed them in web pages. In addition to setting the image source, width, and height attributes, there are a variety of CSS properties that can be used to style `<img>` elements.

### Width and height

One of the most important properties for styling images is `width`. This property can be set to an absolute value (e.g. `500px`) or a relative value (e.g. `50%`). When setting the `width` property, the `height` property will adjust proportionally to maintain the aspect ratio of the image.

```
img {
  width: 50%;
}
```

In some cases, you may want to specify both the `width` and `height` properties to create a fixed aspect ratio. For example, to create a 16:9 aspect ratio, you could use the following CSS:

```
img {
  width: 100%;
  height: 0;
  padding-bottom: 56.25%; /* 9/16 */
}
```

### Borders

Borders can be added to images using the `border` property. This property takes a width and style (e.g. `border: 1px solid black;`). In addition, you can use the `border-radius` property to create rounded corners.

```
img {
  border: 1px solid black;
  border-radius: 4px;
}
```

### Filters

CSS filters can be used to apply visual effects to images. Some of the most commonly used filters include `brightness`, `contrast`, `grayscale`, `hue-rotate`, `invert`, `opacity`, and `saturate`.

```
img {
  filter: grayscale(100%);
}
```

### Example Layouts

#### Centered Image

To center an image horizontally, you can use the following CSS:

```
img {
  display: block;
  margin: 0 auto;
}
```

#### Image with Text Overlay

To place text over an image, one common technique is to use absolute positioning. Here's an example CSS for a block of text centered over an image:

```
.container {
  position: relative;
}

img {
  display: block;
}

.text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
```

## Conclusion

With CSS, there are many ways to style `<img>` elements, from adjusting their size and position to applying filters and effects. By combining these techniques, you can create engaging and visually appealing layouts for your web pages.
=====================

Content prompt used: 
Translate the following to German, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'de' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. styling <img> elements and example layouts
 2. styling <img> elements and example layouts

Metadata returned1. Styling von `<img>`-Elementen und Beispiel-Layouts
2. Styling von `<img>`-Elementen und Beispiel-Layouts 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
