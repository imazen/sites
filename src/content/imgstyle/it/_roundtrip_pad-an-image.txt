---
title: How to Add Margin to an Image
description: >-
  How to add margin to an image using CSS and aspect ratio to center it
taskInputHash: bef5fe97d556f437
lang: en
---
Here's how you can use CSS and aspect ratio to center an image and add margin:

1. First, you need to put the image in a container element, such as a `<div>` or a `<figure>`. This way you can apply styles to the container element that will affect the image inside it.

2. Set the container element's `position` property to `relative`. This way you can position the image inside the container.

3. Add a `::after` pseudo-element selector to the container element. This will be used to maintain the aspect ratio of the image and create the margin.

4. Set the `content` property of the `::after` pseudo-element selector to an empty string. This is necessary to create the element.

5. Set the `padding-bottom` property of the `::after` pseudo-element selector to a percentage value corresponding to the aspect ratio of the image. For example, if the image has an aspect ratio of 4:3, you should set the margin to `75%` (since 3/4 = 0.75). This will create the margin below the image.

6. Set the `position` property of the `::after` pseudo-element selector to `absolute`. This way you will position the element inside the container.

7. Set the `top`, `left`, `bottom`, and `right` properties of the `::after` pseudo-element selector to `0`. This way the element will fill the entire container, creating the margin.

8. Finally, set the `position` property of the image itself to `absolute`. This way you can center the image inside the container using the `top`, `left`, `bottom`, and `right` properties.

Here's an example of CSS code that you can use to center an image with a 4:3 aspect ratio and add margin:

```css
.container {
  position: relative;
  width: 100%;
}

.container::after {
  content: "";
  display: block;
  padding-bottom: 75%; /* aspect ratio of 4:3 */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

img {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  max-width: 100%;
  max-height: 100%;
}
```

In this example, the `.container` element is the container element for the image. The `::after` selector is used to create the margin and maintain the aspect ratio of the image. The `img` element is set to `position: absolute` so that it can be centered inside the container using the `top`, `left`, `bottom`, and `right` properties.

By setting the `max-width` and `max-height` properties of the image to `100%`, the image will scale to fit the available space while maintaining its aspect ratio. This means that the margin created by the `::after` selector will always be proportional to the size of the image.
=====================

Content prompt used: 
Translate the following to Italian, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'it' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Pad an image
 2. How to pad an image using css and aspect ratio to center

Metadata returned1. Dare margine ad un'immagine
2. Come dare margine ad un'immagine utilizzando CSS e il rapporto d'aspetto per centrare 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
