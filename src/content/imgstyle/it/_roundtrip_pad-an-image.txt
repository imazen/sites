---
taskInputHash: 25639837bc1549a4
title: Add Padding to an Image
description: >-
  How to add padding to an image using CSS and aspect ratio to center it
date_published: '2025-02-07'
date_modified: '2025-02-07'
lang: en
---
Here is how you can use CSS and the aspect ratio to center and add padding to an image:
1. First, you need to enclose your image in a container element, such as a `<div>` or `<figure>`. This will allow you to apply styles to the container that will affect the image inside it. 
2. Set the `position` property of the container to `relative`. This will allow you to position the image within the container. 
3. Add an `::after` pseudo-element to the container. This will be used to maintain the aspect ratio of the image and create the padding. 
4. Set the `content` property of the `::after` pseudo-element to an empty string. This is necessary to create the element. 
5. Set the `padding-bottom` property of the `::after` pseudo-element to a percentage value corresponding to the aspect ratio of the image. For example, if your image has an aspect ratio of 4:3, you should set the padding to `75%` (since 3/4 = 0.75). This will create the padding below the image. 
6. Set the `position` property of the `::after` pseudo-element to `absolute`. This will position the element within the container. 
7. Set the `top`, `left`, `bottom`, and `right` properties of the `::after` pseudo-element to `0`. This will make the element fill the container, creating the padding. 
8. Finally, set the `position` property of the image to `absolute`. This will allow you to center the image within the container using the `top`, `left`, `bottom`, and `right` properties.

Here is an example of the CSS code you would use to center and add padding to an image with a 4:3 aspect ratio:

```css
.container {
  position: relative;
  width: 100%;
}

.container::after {
  content: "";
  display: block;
  padding-bottom: 75%; /* 4:3 aspect ratio */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

img {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  max-width: 100%;
  max-height: 100%;
}
```

In this example, the `.container` element is the container for the image. The `::after` pseudo-element is used to create the padding and maintain the aspect ratio of the image. The `img` element is set to `position: absolute` so that it can be centered within the container using the `top`, `left`, `bottom`, and `right` properties.

By setting the image's `max-width` and `max-height` properties to `100%`, the image will fit into the available space while maintaining its aspect ratio. This means the padding created by the `::after` pseudo-element will always be proportional to the size of the image. 

{{No notable mistakes or clumsy phrasing were found in the translation.}}
=====================

Content prompt used: 
Translate the following to Italian, preserving all markdown formatting.
        Don't translate html elements or URLs, but do change 'en' to 'it' inside link addresses.
        Inside code blocks, only translate comments

Metadata prompt used: 
Also carefully translate the title and description for the article; do not use &amp; or &lt; or &gt;
1. Pad an image
 2. How to pad an image using css and aspect ratio to center

Metadata returned1. Aggiungere padding a un'immagine
2. Come aggiungere padding a un'immagine usando CSS e il rapporto d'aspetto per centrare 


Roundtrip (isolated) prompt used: 
Translate the following technical documentation to english, preserving all markdown, code blocks, and links. After the translation, list any mistakes or clumsy phrasing or grammar inside brackets, such as Note that the term used here is not the technical term....
